/*
 * generated by Xtext 2.22.0
 */
grammar InternalHlvl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.coffee.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.coffee.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.coffee.services.HlvlGrammarAccess;

}
@parser::members {
	private HlvlGrammarAccess grammarAccess;

	public void setGrammarAccess(HlvlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfModelRef
entryRuleListOfModelRef
:
{ before(grammarAccess.getListOfModelRefRule()); }
	 ruleListOfModelRef
{ after(grammarAccess.getListOfModelRefRule()); } 
	 EOF 
;

// Rule ListOfModelRef
ruleListOfModelRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfModelRefAccess().getGroup()); }
		(rule__ListOfModelRef__Group__0)
		{ after(grammarAccess.getListOfModelRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElmDeclaration
entryRuleElmDeclaration
:
{ before(grammarAccess.getElmDeclarationRule()); }
	 ruleElmDeclaration
{ after(grammarAccess.getElmDeclarationRule()); } 
	 EOF 
;

// Rule ElmDeclaration
ruleElmDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getGroup()); }
		(rule__ElmDeclaration__Group__0)
		{ after(grammarAccess.getElmDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDecl
entryRuleConstantDecl
:
{ before(grammarAccess.getConstantDeclRule()); }
	 ruleConstantDecl
{ after(grammarAccess.getConstantDeclRule()); } 
	 EOF 
;

// Rule ConstantDecl
ruleConstantDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDeclAccess().getGroup()); }
		(rule__ConstantDecl__Group__0)
		{ after(grammarAccess.getConstantDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDecl
entryRuleVariableDecl
:
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
		(rule__VariableDecl__Group__0)
		{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptionsDeclaration
entryRuleOptionsDeclaration
:
{ before(grammarAccess.getOptionsDeclarationRule()); }
	 ruleOptionsDeclaration
{ after(grammarAccess.getOptionsDeclarationRule()); } 
	 EOF 
;

// Rule OptionsDeclaration
ruleOptionsDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionsDeclarationAccess().getAlternatives()); }
		(rule__OptionsDeclaration__Alternatives)
		{ after(grammarAccess.getOptionsDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterval
entryRuleInterval
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalAccess().getGroup()); }
		(rule__Interval__Group__0)
		{ after(grammarAccess.getIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumeration
entryRuleEnumeration
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationAccess().getGroup()); }
		(rule__Enumeration__Group__0)
		{ after(grammarAccess.getEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelDeclaration
entryRuleRelDeclaration
:
{ before(grammarAccess.getRelDeclarationRule()); }
	 ruleRelDeclaration
{ after(grammarAccess.getRelDeclarationRule()); } 
	 EOF 
;

// Rule RelDeclaration
ruleRelDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelDeclarationAccess().getGroup()); }
		(rule__RelDeclaration__Group__0)
		{ after(grammarAccess.getRelDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getAlternatives()); }
		(rule__Relation__Alternatives)
		{ after(grammarAccess.getRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommon
entryRuleCommon
:
{ before(grammarAccess.getCommonRule()); }
	 ruleCommon
{ after(grammarAccess.getCommonRule()); } 
	 EOF 
;

// Rule Common
ruleCommon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommonAccess().getGroup()); }
		(rule__Common__Group__0)
		{ after(grammarAccess.getCommonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePair
entryRulePair
:
{ before(grammarAccess.getPairRule()); }
	 rulePair
{ after(grammarAccess.getPairRule()); } 
	 EOF 
;

// Rule Pair
rulePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPairAccess().getGroup()); }
		(rule__Pair__Group__0)
		{ after(grammarAccess.getPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexImplies
entryRuleComplexImplies
:
{ before(grammarAccess.getComplexImpliesRule()); }
	 ruleComplexImplies
{ after(grammarAccess.getComplexImpliesRule()); } 
	 EOF 
;

// Rule ComplexImplies
ruleComplexImplies 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexImpliesAccess().getGroup()); }
		(rule__ComplexImplies__Group__0)
		{ after(grammarAccess.getComplexImpliesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexMutex
entryRuleComplexMutex
:
{ before(grammarAccess.getComplexMutexRule()); }
	 ruleComplexMutex
{ after(grammarAccess.getComplexMutexRule()); } 
	 EOF 
;

// Rule ComplexMutex
ruleComplexMutex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexMutexAccess().getGroup()); }
		(rule__ComplexMutex__Group__0)
		{ after(grammarAccess.getComplexMutexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarList
entryRuleVarList
:
{ before(grammarAccess.getVarListRule()); }
	 ruleVarList
{ after(grammarAccess.getVarListRule()); } 
	 EOF 
;

// Rule VarList
ruleVarList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarListAccess().getGroup()); }
		(rule__VarList__Group__0)
		{ after(grammarAccess.getVarListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecomposition
entryRuleDecomposition
:
{ before(grammarAccess.getDecompositionRule()); }
	 ruleDecomposition
{ after(grammarAccess.getDecompositionRule()); } 
	 EOF 
;

// Rule Decomposition
ruleDecomposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecompositionAccess().getGroup()); }
		(rule__Decomposition__Group__0)
		{ after(grammarAccess.getDecompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWildcard
entryRuleWildcard
:
{ before(grammarAccess.getWildcardRule()); }
	 ruleWildcard
{ after(grammarAccess.getWildcardRule()); } 
	 EOF 
;

// Rule Wildcard
ruleWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWildcardAccess().getAlternatives()); }
		(rule__Wildcard__Alternatives)
		{ after(grammarAccess.getWildcardAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisibility
entryRuleVisibility
:
{ before(grammarAccess.getVisibilityRule()); }
	 ruleVisibility
{ after(grammarAccess.getVisibilityRule()); } 
	 EOF 
;

// Rule Visibility
ruleVisibility 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisibilityAccess().getGroup()); }
		(rule__Visibility__Group__0)
		{ after(grammarAccess.getVisibilityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelational
entryRuleRelational
:
{ before(grammarAccess.getRelationalRule()); }
	 ruleRelational
{ after(grammarAccess.getRelationalRule()); } 
	 EOF 
;

// Rule Relational
ruleRelational 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalAccess().getIffParserRuleCall()); }
		ruleIff
		{ after(grammarAccess.getRelationalAccess().getIffParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIff
entryRuleIff
:
{ before(grammarAccess.getIffRule()); }
	 ruleIff
{ after(grammarAccess.getIffRule()); } 
	 EOF 
;

// Rule Iff
ruleIff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIffAccess().getGroup()); }
		(rule__Iff__Group__0)
		{ after(grammarAccess.getIffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplies
entryRuleImplies
:
{ before(grammarAccess.getImpliesRule()); }
	 ruleImplies
{ after(grammarAccess.getImpliesRule()); } 
	 EOF 
;

// Rule Implies
ruleImplies 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesAccess().getGroup()); }
		(rule__Implies__Group__0)
		{ after(grammarAccess.getImpliesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperations
entryRuleOperations
:
{ before(grammarAccess.getOperationsRule()); }
	 ruleOperations
{ after(grammarAccess.getOperationsRule()); } 
	 EOF 
;

// Rule Operations
ruleOperations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationsAccess().getGroup()); }
		(rule__Operations__Group__0)
		{ after(grammarAccess.getOperationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getSampleParserRuleCall()); }
		ruleSample
		{ after(grammarAccess.getOperationAccess().getSampleParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSample
entryRuleSample
:
{ before(grammarAccess.getSampleRule()); }
	 ruleSample
{ after(grammarAccess.getSampleRule()); } 
	 EOF 
;

// Rule Sample
ruleSample 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSampleAccess().getAlternatives()); }
		(rule__Sample__Alternatives)
		{ after(grammarAccess.getSampleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationName
entryRuleOperationName
:
{ before(grammarAccess.getOperationNameRule()); }
	 ruleOperationName
{ after(grammarAccess.getOperationNameRule()); } 
	 EOF 
;

// Rule OperationName
ruleOperationName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationNameAccess().getAlternatives()); }
		(rule__OperationName__Alternatives)
		{ after(grammarAccess.getOperationNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfValues
entryRuleListOfValues
:
{ before(grammarAccess.getListOfValuesRule()); }
	 ruleListOfValues
{ after(grammarAccess.getListOfValuesRule()); } 
	 EOF 
;

// Rule ListOfValues
ruleListOfValues 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfValuesAccess().getGroup()); }
		(rule__ListOfValues__Group__0)
		{ after(grammarAccess.getListOfValuesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfIDs
entryRuleListOfIDs
:
{ before(grammarAccess.getListOfIDsRule()); }
	 ruleListOfIDs
{ after(grammarAccess.getListOfIDsRule()); } 
	 EOF 
;

// Rule ListOfIDs
ruleListOfIDs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfIDsAccess().getGroup()); }
		(rule__ListOfIDs__Group__0)
		{ after(grammarAccess.getListOfIDsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMixedList
entryRuleMixedList
:
{ before(grammarAccess.getMixedListRule()); }
	 ruleMixedList
{ after(grammarAccess.getMixedListRule()); } 
	 EOF 
;

// Rule MixedList
ruleMixedList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMixedListAccess().getGroup()); }
		(rule__MixedList__Group__0)
		{ after(grammarAccess.getMixedListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValuation
entryRuleValuation
:
{ before(grammarAccess.getValuationRule()); }
	 ruleValuation
{ after(grammarAccess.getValuationRule()); } 
	 EOF 
;

// Rule Valuation
ruleValuation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuationAccess().getGroup()); }
		(rule__Valuation__Group__0)
		{ after(grammarAccess.getValuationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfValuation
entryRuleListOfValuation
:
{ before(grammarAccess.getListOfValuationRule()); }
	 ruleListOfValuation
{ after(grammarAccess.getListOfValuationRule()); } 
	 EOF 
;

// Rule ListOfValuation
ruleListOfValuation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfValuationAccess().getGroup()); }
		(rule__ListOfValuation__Group__0)
		{ after(grammarAccess.getListOfValuationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__DataTypeAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getDataTypeBooleanKeyword_2_0_0()); }
		'boolean'
		{ after(grammarAccess.getElmDeclarationAccess().getDataTypeBooleanKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElmDeclarationAccess().getDataTypeIntegerKeyword_2_0_1()); }
		'integer'
		{ after(grammarAccess.getElmDeclarationAccess().getDataTypeIntegerKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getElmDeclarationAccess().getDataTypeSymbolicKeyword_2_0_2()); }
		'symbolic'
		{ after(grammarAccess.getElmDeclarationAccess().getDataTypeSymbolicKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstantDeclParserRuleCall_0()); }
		ruleConstantDecl
		{ after(grammarAccess.getDeclarationAccess().getConstantDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVariableDeclParserRuleCall_1()); }
		ruleVariableDecl
		{ after(grammarAccess.getDeclarationAccess().getVariableDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionsDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsDeclarationAccess().getIntervalParserRuleCall_0()); }
		ruleInterval
		{ after(grammarAccess.getOptionsDeclarationAccess().getIntervalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptionsDeclarationAccess().getEnumerationParserRuleCall_1()); }
		ruleEnumeration
		{ after(grammarAccess.getOptionsDeclarationAccess().getEnumerationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getCommonParserRuleCall_0()); }
		ruleCommon
		{ after(grammarAccess.getRelationAccess().getCommonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getPairParserRuleCall_1()); }
		rulePair
		{ after(grammarAccess.getRelationAccess().getPairParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getVarListParserRuleCall_2()); }
		ruleVarList
		{ after(grammarAccess.getRelationAccess().getVarListParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getOrderParserRuleCall_3()); }
		ruleOrder
		{ after(grammarAccess.getRelationAccess().getOrderParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getDecompositionParserRuleCall_4()); }
		ruleDecomposition
		{ after(grammarAccess.getRelationAccess().getDecompositionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getGroupParserRuleCall_5()); }
		ruleGroup
		{ after(grammarAccess.getRelationAccess().getGroupParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getConstraintParserRuleCall_6()); }
		ruleConstraint
		{ after(grammarAccess.getRelationAccess().getConstraintParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getVisibilityParserRuleCall_7()); }
		ruleVisibility
		{ after(grammarAccess.getRelationAccess().getVisibilityParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getComplexImpliesParserRuleCall_8()); }
		ruleComplexImplies
		{ after(grammarAccess.getRelationAccess().getComplexImpliesParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getComplexMutexParserRuleCall_9()); }
		ruleComplexMutex
		{ after(grammarAccess.getRelationAccess().getComplexMutexParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getOperatorImpliesKeyword_0_0_0()); }
		'implies'
		{ after(grammarAccess.getPairAccess().getOperatorImpliesKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPairAccess().getOperatorMutexKeyword_0_0_1()); }
		'mutex'
		{ after(grammarAccess.getPairAccess().getOperatorMutexKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getOperatorImpliesKeyword_0_0_0()); }
		'implies'
		{ after(grammarAccess.getVarListAccess().getOperatorImpliesKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarListAccess().getOperatorMutexKeyword_0_0_1()); }
		'mutex'
		{ after(grammarAccess.getVarListAccess().getOperatorMutexKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWildcardAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getWildcardAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getWildcardAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getWildcardAccess().getAsteriskKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getOperatorAssignment_0()); }
		(rule__Order__OperatorAssignment_0)
		{ after(grammarAccess.getOrderAccess().getOperatorAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getGroup_1()); }
		(rule__Order__Group_1__0)
		{ after(grammarAccess.getOrderAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
		'='
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpModKeyword_1_1_0_2()); }
		'mod'
		{ after(grammarAccess.getMulOrDivAccess().getOpModKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
		(rule__Primary__Group_5__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_6()); }
		(rule__Primary__Group_6__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_7()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOpAbsKeyword_2_1_0_0()); }
		'abs'
		{ after(grammarAccess.getPrimaryAccess().getOpAbsKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getOpSqrtKeyword_2_1_0_1()); }
		'sqrt'
		{ after(grammarAccess.getPrimaryAccess().getOpSqrtKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAlternatives_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOpPowKeyword_6_1_0_0()); }
		'pow'
		{ after(grammarAccess.getPrimaryAccess().getOpPowKeyword_6_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getOpDistKeyword_6_1_0_1()); }
		'dist'
		{ after(grammarAccess.getPrimaryAccess().getOpDistKeyword_6_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getOpMinKeyword_6_1_0_2()); }
		'min'
		{ after(grammarAccess.getPrimaryAccess().getOpMinKeyword_6_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getOpMaxKeyword_6_1_0_3()); }
		'max'
		{ after(grammarAccess.getPrimaryAccess().getOpMaxKeyword_6_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getOpIfKeyword_6_1_0_4()); }
		'if'
		{ after(grammarAccess.getPrimaryAccess().getOpIfKeyword_6_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTrueKeyword_0_1_0_0()); }
		'true'
		{ after(grammarAccess.getAtomicAccess().getValueTrueKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFalseKeyword_0_1_0_1()); }
		'false'
		{ after(grammarAccess.getAtomicAccess().getValueFalseKeyword_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleAccess().getGroup_0()); }
		(rule__Sample__Group_0__0)
		{ after(grammarAccess.getSampleAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSampleAccess().getGroup_1()); }
		(rule__Sample__Group_1__0)
		{ after(grammarAccess.getSampleAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationNameAccess().getValidModelKeyword_0()); }
		'validModel'
		{ after(grammarAccess.getOperationNameAccess().getValidModelKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationNameAccess().getNumberOfConfigurationsKeyword_1()); }
		'numberOfConfigurations'
		{ after(grammarAccess.getOperationNameAccess().getNumberOfConfigurationsKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationNameAccess().getFindConfigurationKeyword_2()); }
		'findConfiguration'
		{ after(grammarAccess.getOperationNameAccess().getFindConfigurationKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationNameAccess().getFindAllConfigurationsKeyword_3()); }
		'findAllConfigurations'
		{ after(grammarAccess.getOperationNameAccess().getFindAllConfigurationsKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_2()); }
	(rule__Model__Group_2__0)?
	{ after(grammarAccess.getModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsKeyword_3()); }
	'elements:'
	{ after(grammarAccess.getModelAccess().getElementsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_4()); }
	(rule__Model__ElementsAssignment_4)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRelationsKeyword_5()); }
	'relations:'
	{ after(grammarAccess.getModelAccess().getRelationsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRelationsAssignment_6()); }
	(rule__Model__RelationsAssignment_6)*
	{ after(grammarAccess.getModelAccess().getRelationsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_7()); }
	(rule__Model__Group_7__0)?
	{ after(grammarAccess.getModelAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getModelAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getExtendedModelsAssignment_2_1()); }
	(rule__Model__ExtendedModelsAssignment_2_1)
	{ after(grammarAccess.getModelAccess().getExtendedModelsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_7__0__Impl
	rule__Model__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOperationsKeyword_7_0()); }
	'operations:'
	{ after(grammarAccess.getModelAccess().getOperationsKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOperationsAssignment_7_1()); }
	(rule__Model__OperationsAssignment_7_1)
	{ after(grammarAccess.getModelAccess().getOperationsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfModelRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfModelRef__Group__0__Impl
	rule__ListOfModelRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfModelRefAccess().getListOfModelRefAction_0()); }
	()
	{ after(grammarAccess.getListOfModelRefAccess().getListOfModelRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfModelRef__Group__1__Impl
	rule__ListOfModelRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfModelRefAccess().getIdsAssignment_1()); }
	(rule__ListOfModelRef__IdsAssignment_1)
	{ after(grammarAccess.getListOfModelRefAccess().getIdsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfModelRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfModelRefAccess().getGroup_2()); }
	(rule__ListOfModelRef__Group_2__0)*
	{ after(grammarAccess.getListOfModelRefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfModelRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfModelRef__Group_2__0__Impl
	rule__ListOfModelRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfModelRefAccess().getCommaKeyword_2_0()); }
		(',')
		{ after(grammarAccess.getListOfModelRefAccess().getCommaKeyword_2_0()); }
	)
	(
		{ before(grammarAccess.getListOfModelRefAccess().getCommaKeyword_2_0()); }
		(',')*
		{ after(grammarAccess.getListOfModelRefAccess().getCommaKeyword_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfModelRef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfModelRefAccess().getIdsAssignment_2_1()); }
	(rule__ListOfModelRef__IdsAssignment_2_1)
	{ after(grammarAccess.getListOfModelRefAccess().getIdsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElmDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__0__Impl
	rule__ElmDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getElmDeclarationAction_0()); }
	()
	{ after(grammarAccess.getElmDeclarationAccess().getElmDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__1__Impl
	rule__ElmDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getAttAssignment_1()); }
	(rule__ElmDeclaration__AttAssignment_1)?
	{ after(grammarAccess.getElmDeclarationAccess().getAttAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__2__Impl
	rule__ElmDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getDataTypeAssignment_2()); }
	(rule__ElmDeclaration__DataTypeAssignment_2)
	{ after(grammarAccess.getElmDeclarationAccess().getDataTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__3__Impl
	rule__ElmDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getNameAssignment_3()); }
	(rule__ElmDeclaration__NameAssignment_3)
	{ after(grammarAccess.getElmDeclarationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__4__Impl
	rule__ElmDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getDeclarationAssignment_4()); }
	(rule__ElmDeclaration__DeclarationAssignment_4)
	{ after(grammarAccess.getElmDeclarationAccess().getDeclarationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getGroup_5()); }
	(rule__ElmDeclaration__Group_5__0)?
	{ after(grammarAccess.getElmDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElmDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group_5__0__Impl
	rule__ElmDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getCommentKeyword_5_0()); }
	'comment:'
	{ after(grammarAccess.getElmDeclarationAccess().getCommentKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group_5__1__Impl
	rule__ElmDeclaration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getElmDeclarationAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group_5__2__Impl
	rule__ElmDeclaration__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getCommentAssignment_5_2()); }
	(rule__ElmDeclaration__CommentAssignment_5_2)
	{ after(grammarAccess.getElmDeclarationAccess().getCommentAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElmDeclaration__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElmDeclarationAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getElmDeclarationAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group__0__Impl
	rule__ConstantDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getConstantDeclAction_0()); }
	()
	{ after(grammarAccess.getConstantDeclAccess().getConstantDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getGroup_1()); }
	(rule__ConstantDecl__Group_1__0)?
	{ after(grammarAccess.getConstantDeclAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group_1__0__Impl
	rule__ConstantDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getIsKeyword_1_0()); }
	'is'
	{ after(grammarAccess.getConstantDeclAccess().getIsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getValueAssignment_1_1()); }
	(rule__ConstantDecl__ValueAssignment_1_1)
	{ after(grammarAccess.getConstantDeclAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__0__Impl
	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getVariableDeclAction_0()); }
	()
	{ after(grammarAccess.getVariableDeclAccess().getVariableDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getGroup_1()); }
	(rule__VariableDecl__Group_1__0)
	{ after(grammarAccess.getVariableDeclAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group_1__0__Impl
	rule__VariableDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getVariantsKeyword_1_0()); }
	'variants:'
	{ after(grammarAccess.getVariableDeclAccess().getVariantsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getVariantsAssignment_1_1()); }
	(rule__VariableDecl__VariantsAssignment_1_1)
	{ after(grammarAccess.getVariableDeclAccess().getVariantsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__0__Impl
	rule__Interval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getStartAssignment_0()); }
	(rule__Interval__StartAssignment_0)
	{ after(grammarAccess.getIntervalAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__1__Impl
	rule__Interval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getIntervalAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getEndAssignment_2()); }
	(rule__Interval__EndAssignment_2)
	{ after(grammarAccess.getIntervalAccess().getEndAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getEnumerationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__1__Impl
	rule__Enumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getListAssignment_1()); }
	(rule__Enumeration__ListAssignment_1)
	{ after(grammarAccess.getEnumerationAccess().getListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getEnumerationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelDeclaration__Group__0__Impl
	rule__RelDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelDeclarationAccess().getRelDeclarationAction_0()); }
	()
	{ after(grammarAccess.getRelDeclarationAccess().getRelDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelDeclaration__Group__1__Impl
	rule__RelDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelDeclarationAccess().getNameAssignment_1()); }
	(rule__RelDeclaration__NameAssignment_1)
	{ after(grammarAccess.getRelDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelDeclaration__Group__2__Impl
	rule__RelDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelDeclarationAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRelDeclarationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelDeclarationAccess().getExpAssignment_3()); }
	(rule__RelDeclaration__ExpAssignment_3)
	{ after(grammarAccess.getRelDeclarationAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Common__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Common__Group__0__Impl
	rule__Common__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommonAccess().getCommonAction_0()); }
	()
	{ after(grammarAccess.getCommonAccess().getCommonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Common__Group__1__Impl
	rule__Common__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommonAccess().getCommonKeyword_1()); }
	'common'
	{ after(grammarAccess.getCommonAccess().getCommonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Common__Group__2__Impl
	rule__Common__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommonAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCommonAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Common__Group__3__Impl
	rule__Common__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommonAccess().getElementsAssignment_3()); }
	(rule__Common__ElementsAssignment_3)
	{ after(grammarAccess.getCommonAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Common__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommonAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCommonAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__0__Impl
	rule__Pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getOperatorAssignment_0()); }
	(rule__Pair__OperatorAssignment_0)
	{ after(grammarAccess.getPairAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__1__Impl
	rule__Pair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPairAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__2__Impl
	rule__Pair__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getVar1Assignment_2()); }
	(rule__Pair__Var1Assignment_2)
	{ after(grammarAccess.getPairAccess().getVar1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__3__Impl
	rule__Pair__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getPairAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__4__Impl
	rule__Pair__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getVar2Assignment_4()); }
	(rule__Pair__Var2Assignment_4)
	{ after(grammarAccess.getPairAccess().getVar2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPairAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexImplies__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__0__Impl
	rule__ComplexImplies__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getImpliesKeyword_0()); }
	'implies'
	{ after(grammarAccess.getComplexImpliesAccess().getImpliesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__1__Impl
	rule__ComplexImplies__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getComplexImpliesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__2__Impl
	rule__ComplexImplies__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getComplexImpliesAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__3__Impl
	rule__ComplexImplies__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getExpAssignment_3()); }
	(rule__ComplexImplies__ExpAssignment_3)
	{ after(grammarAccess.getComplexImpliesAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__4__Impl
	rule__ComplexImplies__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getComplexImpliesAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__5__Impl
	rule__ComplexImplies__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getComplexImpliesAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__6__Impl
	rule__ComplexImplies__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getLeftSquareBracketKeyword_6()); }
	'['
	{ after(grammarAccess.getComplexImpliesAccess().getLeftSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__7__Impl
	rule__ComplexImplies__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getElementsAssignment_7()); }
	(rule__ComplexImplies__ElementsAssignment_7)
	{ after(grammarAccess.getComplexImpliesAccess().getElementsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__8__Impl
	rule__ComplexImplies__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getComplexImpliesAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexImplies__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexImpliesAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getComplexImpliesAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexMutex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__0__Impl
	rule__ComplexMutex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getMutexKeyword_0()); }
	'mutex'
	{ after(grammarAccess.getComplexMutexAccess().getMutexKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__1__Impl
	rule__ComplexMutex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getComplexMutexAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__2__Impl
	rule__ComplexMutex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getComplexMutexAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__3__Impl
	rule__ComplexMutex__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getExpAssignment_3()); }
	(rule__ComplexMutex__ExpAssignment_3)
	{ after(grammarAccess.getComplexMutexAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__4__Impl
	rule__ComplexMutex__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getComplexMutexAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__5__Impl
	rule__ComplexMutex__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getComplexMutexAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__6__Impl
	rule__ComplexMutex__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getLeftSquareBracketKeyword_6()); }
	'['
	{ after(grammarAccess.getComplexMutexAccess().getLeftSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__7__Impl
	rule__ComplexMutex__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getElementsAssignment_7()); }
	(rule__ComplexMutex__ElementsAssignment_7)
	{ after(grammarAccess.getComplexMutexAccess().getElementsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__8__Impl
	rule__ComplexMutex__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getComplexMutexAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexMutex__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexMutexAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getComplexMutexAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__0__Impl
	rule__VarList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getOperatorAssignment_0()); }
	(rule__VarList__OperatorAssignment_0)
	{ after(grammarAccess.getVarListAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__1__Impl
	rule__VarList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVarListAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__2__Impl
	rule__VarList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getVar1Assignment_2()); }
	(rule__VarList__Var1Assignment_2)
	{ after(grammarAccess.getVarListAccess().getVar1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__3__Impl
	rule__VarList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getVarListAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__4__Impl
	rule__VarList__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getVarListAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__5__Impl
	rule__VarList__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getListAssignment_5()); }
	(rule__VarList__ListAssignment_5)
	{ after(grammarAccess.getVarListAccess().getListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__6__Impl
	rule__VarList__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getVarListAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getVarListAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__0__Impl
	rule__Decomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getDecompositionAction_0()); }
	()
	{ after(grammarAccess.getDecompositionAccess().getDecompositionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__1__Impl
	rule__Decomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getDecompositionKeyword_1()); }
	'decomposition'
	{ after(grammarAccess.getDecompositionAccess().getDecompositionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__2__Impl
	rule__Decomposition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDecompositionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__3__Impl
	rule__Decomposition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getParentAssignment_3()); }
	(rule__Decomposition__ParentAssignment_3)
	{ after(grammarAccess.getDecompositionAccess().getParentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__4__Impl
	rule__Decomposition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getDecompositionAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__5__Impl
	rule__Decomposition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getLeftSquareBracketKeyword_5()); }
	'['
	{ after(grammarAccess.getDecompositionAccess().getLeftSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__6__Impl
	rule__Decomposition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getChildrenAssignment_6()); }
	(rule__Decomposition__ChildrenAssignment_6)
	{ after(grammarAccess.getDecompositionAccess().getChildrenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__7__Impl
	rule__Decomposition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getDecompositionAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__8__Impl
	rule__Decomposition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getCommaKeyword_8()); }
	','
	{ after(grammarAccess.getDecompositionAccess().getCommaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__9__Impl
	rule__Decomposition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getLeftSquareBracketKeyword_9()); }
	'['
	{ after(grammarAccess.getDecompositionAccess().getLeftSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__10__Impl
	rule__Decomposition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getMinAssignment_10()); }
	(rule__Decomposition__MinAssignment_10)
	{ after(grammarAccess.getDecompositionAccess().getMinAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__11__Impl
	rule__Decomposition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getDecompositionAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__12__Impl
	rule__Decomposition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getMaxAssignment_12()); }
	(rule__Decomposition__MaxAssignment_12)
	{ after(grammarAccess.getDecompositionAccess().getMaxAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__13__Impl
	rule__Decomposition__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getRightSquareBracketKeyword_13()); }
	']'
	{ after(grammarAccess.getDecompositionAccess().getRightSquareBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getRightParenthesisKeyword_14()); }
	')'
	{ after(grammarAccess.getDecompositionAccess().getRightParenthesisKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupAction_0()); }
	()
	{ after(grammarAccess.getGroupAccess().getGroupAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupKeyword_1()); }
	'group'
	{ after(grammarAccess.getGroupAccess().getGroupKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getParentAssignment_3()); }
	(rule__Group__ParentAssignment_3)
	{ after(grammarAccess.getGroupAccess().getParentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getGroupAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__5__Impl
	rule__Group__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_5()); }
	'['
	{ after(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__6__Impl
	rule__Group__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getChildrenAssignment_6()); }
	(rule__Group__ChildrenAssignment_6)
	{ after(grammarAccess.getGroupAccess().getChildrenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__7__Impl
	rule__Group__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__8__Impl
	rule__Group__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getCommaKeyword_8()); }
	','
	{ after(grammarAccess.getGroupAccess().getCommaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__9__Impl
	rule__Group__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_9()); }
	'['
	{ after(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__10__Impl
	rule__Group__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getMinAssignment_10()); }
	(rule__Group__MinAssignment_10)
	{ after(grammarAccess.getGroupAccess().getMinAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__11__Impl
	rule__Group__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getGroupAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__12__Impl
	rule__Group__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getMaxAssignment_12()); }
	(rule__Group__MaxAssignment_12)
	{ after(grammarAccess.getGroupAccess().getMaxAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__13__Impl
	rule__Group__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_13()); }
	']'
	{ after(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightParenthesisKeyword_14()); }
	')'
	{ after(grammarAccess.getGroupAccess().getRightParenthesisKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getRangeAction_0()); }
	()
	{ after(grammarAccess.getRangeAccess().getRangeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getValueAssignment_1()); }
	(rule__Range__ValueAssignment_1)
	{ after(grammarAccess.getRangeAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visibility__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__0__Impl
	rule__Visibility__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getVisibilityKeyword_0()); }
	'visibility'
	{ after(grammarAccess.getVisibilityAccess().getVisibilityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__1__Impl
	rule__Visibility__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVisibilityAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__2__Impl
	rule__Visibility__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getConditionAssignment_2()); }
	(rule__Visibility__ConditionAssignment_2)
	{ after(grammarAccess.getVisibilityAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__3__Impl
	rule__Visibility__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getVisibilityAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__4__Impl
	rule__Visibility__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getVisibilityAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__5__Impl
	rule__Visibility__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getListAssignment_5()); }
	(rule__Visibility__ListAssignment_5)
	{ after(grammarAccess.getVisibilityAccess().getListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__6__Impl
	rule__Visibility__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getVisibilityAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visibility__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisibilityAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getVisibilityAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__0__Impl
	rule__Order__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getAfterKeyword_1_0()); }
	'after'
	{ after(grammarAccess.getOrderAccess().getAfterKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__1__Impl
	rule__Order__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getLeftAssignment_1_1()); }
	(rule__Order__LeftAssignment_1_1)
	{ after(grammarAccess.getOrderAccess().getLeftAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__2__Impl
	rule__Order__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getOrderAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__3__Impl
	rule__Order__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getLeftSquareBracketKeyword_1_3()); }
	'['
	{ after(grammarAccess.getOrderAccess().getLeftSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__4__Impl
	rule__Order__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getRightAssignment_1_4()); }
	(rule__Order__RightAssignment_1_4)
	{ after(grammarAccess.getOrderAccess().getRightAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getRightSquareBracketKeyword_1_5()); }
	']'
	{ after(grammarAccess.getOrderAccess().getRightSquareBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getExpressionKeyword_0()); }
	'expression'
	{ after(grammarAccess.getConstraintAccess().getExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConstraintAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getExpAssignment_2()); }
	(rule__Constraint__ExpAssignment_2)
	{ after(grammarAccess.getConstraintAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConstraintAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iff__Group__0__Impl
	rule__Iff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIffAccess().getImpliesParserRuleCall_0()); }
	ruleImplies
	{ after(grammarAccess.getIffAccess().getImpliesParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iff__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIffAccess().getGroup_1()); }
	(rule__Iff__Group_1__0)*
	{ after(grammarAccess.getIffAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iff__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iff__Group_1__0__Impl
	rule__Iff__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIffAccess().getIffLeftAction_1_0()); }
	()
	{ after(grammarAccess.getIffAccess().getIffLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iff__Group_1__1__Impl
	rule__Iff__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIffAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
	'<=>'
	{ after(grammarAccess.getIffAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iff__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIffAccess().getRightAssignment_1_2()); }
	(rule__Iff__RightAssignment_1_2)
	{ after(grammarAccess.getIffAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implies__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implies__Group__0__Impl
	rule__Implies__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getImpliesAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implies__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesAccess().getGroup_1()); }
	(rule__Implies__Group_1__0)*
	{ after(grammarAccess.getImpliesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implies__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implies__Group_1__0__Impl
	rule__Implies__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesAccess().getImpliesLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImpliesAccess().getImpliesLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implies__Group_1__1__Impl
	rule__Implies__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
	'=>'
	{ after(grammarAccess.getImpliesAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implies__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesAccess().getRightAssignment_1_2()); }
	(rule__Implies__RightAssignment_1_2)
	{ after(grammarAccess.getImpliesAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getORKeyword_1_1()); }
	'OR'
	{ after(grammarAccess.getOrAccess().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRelationalParserRuleCall_0_1()); }
	ruleRelational
	{ after(grammarAccess.getPrimaryAccess().getRelationalParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNegationAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNegationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getTildeKeyword_1_1()); }
	'~'
	{ after(grammarAccess.getPrimaryAccess().getTildeKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUnaryFunctionAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getUnaryFunctionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOpAssignment_2_1()); }
	(rule__Primary__OpAssignment_2_1)
	{ after(grammarAccess.getPrimaryAccess().getOpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
	(rule__Primary__ExpressionAssignment_2_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInstancesAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getInstancesAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInstancesKeyword_3_1()); }
	'instances'
	{ after(grammarAccess.getPrimaryAccess().getInstancesKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
	rule__Primary__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__3__Impl
	rule__Primary__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getElementAssignment_3_3()); }
	(rule__Primary__ElementAssignment_3_3)
	{ after(grammarAccess.getPrimaryAccess().getElementAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__4__Impl
	rule__Primary__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCommaKeyword_3_4()); }
	','
	{ after(grammarAccess.getPrimaryAccess().getCommaKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__5__Impl
	rule__Primary__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNumberAssignment_3_5()); }
	(rule__Primary__NumberAssignment_3_5)
	{ after(grammarAccess.getPrimaryAccess().getNumberAssignment_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_6()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getEntailedAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getEntailedAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getEntailedKeyword_4_1()); }
	'entailed'
	{ after(grammarAccess.getPrimaryAccess().getEntailedKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__2__Impl
	rule__Primary__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_4_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__3__Impl
	rule__Primary__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getElementAssignment_4_3()); }
	(rule__Primary__ElementAssignment_4_3)
	{ after(grammarAccess.getPrimaryAccess().getElementAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getSelectedAction_5_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getSelectedAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__1__Impl
	rule__Primary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getSelectedKeyword_5_1()); }
	'selected'
	{ after(grammarAccess.getPrimaryAccess().getSelectedKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__2__Impl
	rule__Primary__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_5_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__3__Impl
	rule__Primary__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getElementAssignment_5_3()); }
	(rule__Primary__ElementAssignment_5_3)
	{ after(grammarAccess.getPrimaryAccess().getElementAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_5_4()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__0__Impl
	rule__Primary__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBinaryFunctionAction_6_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBinaryFunctionAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__1__Impl
	rule__Primary__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOpAssignment_6_1()); }
	(rule__Primary__OpAssignment_6_1)
	{ after(grammarAccess.getPrimaryAccess().getOpAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__2__Impl
	rule__Primary__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_6_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__3__Impl
	rule__Primary__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftAssignment_6_3()); }
	(rule__Primary__LeftAssignment_6_3)
	{ after(grammarAccess.getPrimaryAccess().getLeftAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__4__Impl
	rule__Primary__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCommaKeyword_6_4()); }
	','
	{ after(grammarAccess.getPrimaryAccess().getCommaKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__5__Impl
	rule__Primary__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightAssignment_6_5()); }
	(rule__Primary__RightAssignment_6_5)
	{ after(grammarAccess.getPrimaryAccess().getRightAssignment_6_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_6_6()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_6_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableRefAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableRefAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableAssignment_1_1()); }
	(rule__Atomic__VariableAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getVariableAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeRefAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getAttributeRefAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeAssignment_2_1()); }
	(rule__Atomic__AttributeAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getAttributeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getSymbolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getSymbolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
	(rule__Atomic__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getElementAssignment_0()); }
	(rule__QualifiedName__ElementAssignment_0)
	{ after(grammarAccess.getQualifiedNameAccess().getElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getAttAssignment_2()); }
	(rule__QualifiedName__AttAssignment_2)
	{ after(grammarAccess.getQualifiedNameAccess().getAttAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operations__Group__0__Impl
	rule__Operations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsAccess().getOpAssignment_0()); }
	(rule__Operations__OpAssignment_0)
	{ after(grammarAccess.getOperationsAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsAccess().getGroup_1()); }
	(rule__Operations__Group_1__0)*
	{ after(grammarAccess.getOperationsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operations__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operations__Group_1__0__Impl
	rule__Operations__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperationsAccess().getCommaKeyword_1_0()); }
		(',')
		{ after(grammarAccess.getOperationsAccess().getCommaKeyword_1_0()); }
	)
	(
		{ before(grammarAccess.getOperationsAccess().getCommaKeyword_1_0()); }
		(',')*
		{ after(grammarAccess.getOperationsAccess().getCommaKeyword_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operations__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsAccess().getOpAssignment_1_1()); }
	(rule__Operations__OpAssignment_1_1)
	{ after(grammarAccess.getOperationsAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sample__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_0__0__Impl
	rule__Sample__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getSingleInstructionAction_0_0()); }
	()
	{ after(grammarAccess.getSampleAccess().getSingleInstructionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getNameAssignment_0_1()); }
	(rule__Sample__NameAssignment_0_1)
	{ after(grammarAccess.getSampleAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sample__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_1__0__Impl
	rule__Sample__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getValidConfAction_1_0()); }
	()
	{ after(grammarAccess.getSampleAccess().getValidConfAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_1__1__Impl
	rule__Sample__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getValidConfigurationKeyword_1_1()); }
	'validConfiguration'
	{ after(grammarAccess.getSampleAccess().getValidConfigurationKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_1__2__Impl
	rule__Sample__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getSampleAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_1__3__Impl
	rule__Sample__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getValuationsAssignment_1_3()); }
	(rule__Sample__ValuationsAssignment_1_3)
	{ after(grammarAccess.getSampleAccess().getValuationsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getSampleAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group__0__Impl
	rule__ListOfValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
	(rule__ListOfValues__ValuesAssignment_0)
	{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getGroup_1()); }
	(rule__ListOfValues__Group_1__0)*
	{ after(grammarAccess.getListOfValuesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group_1__0__Impl
	rule__ListOfValues__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
		(',')
		{ after(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
	)
	(
		{ before(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
		(',')*
		{ after(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
	(rule__ListOfValues__ValuesAssignment_1_1)
	{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfIDs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group__0__Impl
	rule__ListOfIDs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getListOfIDsAction_0()); }
	()
	{ after(grammarAccess.getListOfIDsAccess().getListOfIDsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group__1__Impl
	rule__ListOfIDs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getValuesAssignment_1()); }
	(rule__ListOfIDs__ValuesAssignment_1)
	{ after(grammarAccess.getListOfIDsAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getGroup_2()); }
	(rule__ListOfIDs__Group_2__0)*
	{ after(grammarAccess.getListOfIDsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfIDs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group_2__0__Impl
	rule__ListOfIDs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfIDsAccess().getCommaKeyword_2_0()); }
		(',')
		{ after(grammarAccess.getListOfIDsAccess().getCommaKeyword_2_0()); }
	)
	(
		{ before(grammarAccess.getListOfIDsAccess().getCommaKeyword_2_0()); }
		(',')*
		{ after(grammarAccess.getListOfIDsAccess().getCommaKeyword_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getValuesAssignment_2_1()); }
	(rule__ListOfIDs__ValuesAssignment_2_1)
	{ after(grammarAccess.getListOfIDsAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MixedList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixedList__Group__0__Impl
	rule__MixedList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixedListAccess().getMixedListAction_0()); }
	()
	{ after(grammarAccess.getMixedListAccess().getMixedListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixedList__Group__1__Impl
	rule__MixedList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixedListAccess().getIdsAssignment_1()); }
	(rule__MixedList__IdsAssignment_1)
	{ after(grammarAccess.getMixedListAccess().getIdsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixedList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixedListAccess().getGroup_2()); }
	(rule__MixedList__Group_2__0)*
	{ after(grammarAccess.getMixedListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MixedList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixedList__Group_2__0__Impl
	rule__MixedList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMixedListAccess().getCommaKeyword_2_0()); }
		(',')
		{ after(grammarAccess.getMixedListAccess().getCommaKeyword_2_0()); }
	)
	(
		{ before(grammarAccess.getMixedListAccess().getCommaKeyword_2_0()); }
		(',')*
		{ after(grammarAccess.getMixedListAccess().getCommaKeyword_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixedList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixedListAccess().getIdsAssignment_2_1()); }
	(rule__MixedList__IdsAssignment_2_1)
	{ after(grammarAccess.getMixedListAccess().getIdsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Valuation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Valuation__Group__0__Impl
	rule__Valuation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getValuationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Valuation__Group__1__Impl
	rule__Valuation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuationAccess().getElementAssignment_1()); }
	(rule__Valuation__ElementAssignment_1)
	{ after(grammarAccess.getValuationAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Valuation__Group__2__Impl
	rule__Valuation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuationAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getValuationAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Valuation__Group__3__Impl
	rule__Valuation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuationAccess().getValueAssignment_3()); }
	(rule__Valuation__ValueAssignment_3)
	{ after(grammarAccess.getValuationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Valuation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getValuationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValuation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValuation__Group__0__Impl
	rule__ListOfValuation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuationAccess().getPairsAssignment_0()); }
	(rule__ListOfValuation__PairsAssignment_0)
	{ after(grammarAccess.getListOfValuationAccess().getPairsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValuation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuationAccess().getGroup_1()); }
	(rule__ListOfValuation__Group_1__0)*
	{ after(grammarAccess.getListOfValuationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValuation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValuation__Group_1__0__Impl
	rule__ListOfValuation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfValuationAccess().getCommaKeyword_1_0()); }
		(',')
		{ after(grammarAccess.getListOfValuationAccess().getCommaKeyword_1_0()); }
	)
	(
		{ before(grammarAccess.getListOfValuationAccess().getCommaKeyword_1_0()); }
		(',')*
		{ after(grammarAccess.getListOfValuationAccess().getCommaKeyword_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValuation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuationAccess().getPairsAssignment_1_1()); }
	(rule__ListOfValuation__PairsAssignment_1_1)
	{ after(grammarAccess.getListOfValuationAccess().getPairsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExtendedModelsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExtendedModelsListOfModelRefParserRuleCall_2_1_0()); }
		ruleListOfModelRef
		{ after(grammarAccess.getModelAccess().getExtendedModelsListOfModelRefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsElmDeclarationParserRuleCall_4_0()); }
		ruleElmDeclaration
		{ after(grammarAccess.getModelAccess().getElementsElmDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RelationsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRelationsRelDeclarationParserRuleCall_6_0()); }
		ruleRelDeclaration
		{ after(grammarAccess.getModelAccess().getRelationsRelDeclarationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OperationsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOperationsOperationsParserRuleCall_7_1_0()); }
		ruleOperations
		{ after(grammarAccess.getModelAccess().getOperationsOperationsParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__IdsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfModelRefAccess().getIdsModelCrossReference_1_0()); }
		(
			{ before(grammarAccess.getListOfModelRefAccess().getIdsModelIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfModelRefAccess().getIdsModelIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getListOfModelRefAccess().getIdsModelCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfModelRef__IdsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfModelRefAccess().getIdsModelCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getListOfModelRefAccess().getIdsModelIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfModelRefAccess().getIdsModelIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getListOfModelRefAccess().getIdsModelCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__AttAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getAttAttKeyword_1_0()); }
		(
			{ before(grammarAccess.getElmDeclarationAccess().getAttAttKeyword_1_0()); }
			'att'
			{ after(grammarAccess.getElmDeclarationAccess().getAttAttKeyword_1_0()); }
		)
		{ after(grammarAccess.getElmDeclarationAccess().getAttAttKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__DataTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getDataTypeAlternatives_2_0()); }
		(rule__ElmDeclaration__DataTypeAlternatives_2_0)
		{ after(grammarAccess.getElmDeclarationAccess().getDataTypeAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getElmDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__DeclarationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getDeclarationDeclarationParserRuleCall_4_0()); }
		ruleDeclaration
		{ after(grammarAccess.getElmDeclarationAccess().getDeclarationDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElmDeclaration__CommentAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElmDeclarationAccess().getCommentSTRINGTerminalRuleCall_5_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getElmDeclarationAccess().getCommentSTRINGTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclAccess().getValueRelationalParserRuleCall_1_1_0()); }
		ruleRelational
		{ after(grammarAccess.getConstantDeclAccess().getValueRelationalParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariantsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclAccess().getVariantsOptionsDeclarationParserRuleCall_1_1_0()); }
		ruleOptionsDeclaration
		{ after(grammarAccess.getVariableDeclAccess().getVariantsOptionsDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getStartINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getIntervalAccess().getStartINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__EndAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getEndINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getIntervalAccess().getEndINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__ListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getListListOfValuesParserRuleCall_1_0()); }
		ruleListOfValues
		{ after(grammarAccess.getEnumerationAccess().getListListOfValuesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRelDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelDeclaration__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelDeclarationAccess().getExpRelationParserRuleCall_3_0()); }
		ruleRelation
		{ after(grammarAccess.getRelDeclarationAccess().getExpRelationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Common__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommonAccess().getElementsListOfIDsParserRuleCall_3_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getCommonAccess().getElementsListOfIDsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getOperatorAlternatives_0_0()); }
		(rule__Pair__OperatorAlternatives_0_0)
		{ after(grammarAccess.getPairAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Var1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getVar1ElmDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPairAccess().getVar1ElmDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPairAccess().getVar1ElmDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPairAccess().getVar1ElmDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Var2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getVar2ElmDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getPairAccess().getVar2ElmDeclarationIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPairAccess().getVar2ElmDeclarationIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getPairAccess().getVar2ElmDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexImpliesAccess().getExpRelationalParserRuleCall_3_0()); }
		ruleRelational
		{ after(grammarAccess.getComplexImpliesAccess().getExpRelationalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexImplies__ElementsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexImpliesAccess().getElementsListOfIDsParserRuleCall_7_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getComplexImpliesAccess().getElementsListOfIDsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexMutexAccess().getExpRelationalParserRuleCall_3_0()); }
		ruleRelational
		{ after(grammarAccess.getComplexMutexAccess().getExpRelationalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexMutex__ElementsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexMutexAccess().getElementsListOfIDsParserRuleCall_7_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getComplexMutexAccess().getElementsListOfIDsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getOperatorAlternatives_0_0()); }
		(rule__VarList__OperatorAlternatives_0_0)
		{ after(grammarAccess.getVarListAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Var1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getVar1ElmDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getVarListAccess().getVar1ElmDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarListAccess().getVar1ElmDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getVarListAccess().getVar1ElmDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__ListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getListListOfIDsParserRuleCall_5_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getVarListAccess().getListListOfIDsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__ParentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getParentElmDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDecompositionAccess().getParentElmDeclarationIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDecompositionAccess().getParentElmDeclarationIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDecompositionAccess().getParentElmDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__ChildrenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getChildrenListOfIDsParserRuleCall_6_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getDecompositionAccess().getChildrenListOfIDsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__MinAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getMinINTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getDecompositionAccess().getMinINTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__MaxAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getMaxINTTerminalRuleCall_12_0()); }
		RULE_INT
		{ after(grammarAccess.getDecompositionAccess().getMaxINTTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ParentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getParentElmDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getParentElmDeclarationIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGroupAccess().getParentElmDeclarationIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getParentElmDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ChildrenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getChildrenListOfIDsParserRuleCall_6_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getGroupAccess().getChildrenListOfIDsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__MinAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getMinINTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getGroupAccess().getMinINTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__MaxAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getMaxRangeParserRuleCall_12_0()); }
		ruleRange
		{ after(grammarAccess.getGroupAccess().getMaxRangeParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getValueWildcardParserRuleCall_1_0()); }
		ruleWildcard
		{ after(grammarAccess.getRangeAccess().getValueWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getConditionRelationalParserRuleCall_2_0()); }
		ruleRelational
		{ after(grammarAccess.getVisibilityAccess().getConditionRelationalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__ListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getListMixedListParserRuleCall_5_0()); }
		ruleMixedList
		{ after(grammarAccess.getVisibilityAccess().getListMixedListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getOperatorBeforeKeyword_0_0()); }
		(
			{ before(grammarAccess.getOrderAccess().getOperatorBeforeKeyword_0_0()); }
			'before'
			{ after(grammarAccess.getOrderAccess().getOperatorBeforeKeyword_0_0()); }
		)
		{ after(grammarAccess.getOrderAccess().getOperatorBeforeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__LeftAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getLeftElmDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getOrderAccess().getLeftElmDeclarationIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOrderAccess().getLeftElmDeclarationIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getOrderAccess().getLeftElmDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__RightAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getRightListOfIDsParserRuleCall_1_4_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getOrderAccess().getRightListOfIDsParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getExpRelationalParserRuleCall_2_0()); }
		ruleRelational
		{ after(grammarAccess.getConstraintAccess().getExpRelationalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iff__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIffAccess().getRightImpliesParserRuleCall_1_2_0()); }
		ruleImplies
		{ after(grammarAccess.getIffAccess().getRightImpliesParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implies__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getImpliesAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOpAlternatives_2_1_0()); }
		(rule__Primary__OpAlternatives_2_1_0)
		{ after(grammarAccess.getPrimaryAccess().getOpAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_3_3_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_3_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_3_3_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NumberAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberINTTerminalRuleCall_3_5_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryAccess().getNumberINTTerminalRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_4_3_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_4_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_4_3_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_5_3_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_5_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationIDTerminalRuleCall_5_3_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getElementElmDeclarationCrossReference_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OpAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOpAlternatives_6_1_0()); }
		(rule__Primary__OpAlternatives_6_1_0)
		{ after(grammarAccess.getPrimaryAccess().getOpAlternatives_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__LeftAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getLeftPrimaryParserRuleCall_6_3_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getLeftPrimaryParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__RightAssignment_6_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getRightPrimaryParserRuleCall_6_5_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getRightPrimaryParserRuleCall_6_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_0_1_0()); }
		(rule__Atomic__ValueAlternatives_0_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableElmDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableElmDeclarationIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableElmDeclarationIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableElmDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AttributeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getAttributeQualifiedNameParserRuleCall_2_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAtomicAccess().getAttributeQualifiedNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__ElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getElementElmDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getQualifiedNameAccess().getElementElmDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQualifiedNameAccess().getElementElmDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getQualifiedNameAccess().getElementElmDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__AttAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getAttElmDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getQualifiedNameAccess().getAttElmDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQualifiedNameAccess().getAttElmDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getQualifiedNameAccess().getAttElmDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsAccess().getOpOperationParserRuleCall_0_0()); }
		ruleOperation
		{ after(grammarAccess.getOperationsAccess().getOpOperationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operations__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsAccess().getOpOperationParserRuleCall_1_1_0()); }
		ruleOperation
		{ after(grammarAccess.getOperationsAccess().getOpOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleAccess().getNameOperationNameParserRuleCall_0_1_0()); }
		ruleOperationName
		{ after(grammarAccess.getSampleAccess().getNameOperationNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__ValuationsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleAccess().getValuationsListOfValuationParserRuleCall_1_3_0()); }
		ruleListOfValuation
		{ after(grammarAccess.getSampleAccess().getValuationsListOfValuationParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuesAccess().getValuesRelationalParserRuleCall_0_0()); }
		ruleRelational
		{ after(grammarAccess.getListOfValuesAccess().getValuesRelationalParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuesAccess().getValuesRelationalParserRuleCall_1_1_0()); }
		ruleRelational
		{ after(grammarAccess.getListOfValuesAccess().getValuesRelationalParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getListOfIDsAccess().getValuesElmDeclarationCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__IdsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMixedListAccess().getIdsNamedItemCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMixedListAccess().getIdsNamedItemIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMixedListAccess().getIdsNamedItemIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMixedListAccess().getIdsNamedItemCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixedList__IdsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMixedListAccess().getIdsNamedItemCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getMixedListAccess().getIdsNamedItemIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMixedListAccess().getIdsNamedItemIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getMixedListAccess().getIdsNamedItemCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuationAccess().getElementElmDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getValuationAccess().getElementElmDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValuationAccess().getElementElmDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getValuationAccess().getElementElmDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Valuation__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuationAccess().getValueRelationalParserRuleCall_3_0()); }
		ruleRelational
		{ after(grammarAccess.getValuationAccess().getValueRelationalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__PairsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuationAccess().getPairsValuationParserRuleCall_0_0()); }
		ruleValuation
		{ after(grammarAccess.getListOfValuationAccess().getPairsValuationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValuation__PairsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuationAccess().getPairsValuationParserRuleCall_1_1_0()); }
		ruleValuation
		{ after(grammarAccess.getListOfValuationAccess().getPairsValuationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
